## List Comprehensions
if __name__ == '__main__':
    x = int(input())
    y = int(input())
    z = int(input())
    n = int(input())
    
    i,j,k = 0,0,0
    ls = []
    
    for i in range(x+1):
        for j in range(y+1):
            for k in range(z+1):
                if i+j+k == n:
                    pass
                else:
                    ls.append([i,j,k])
                    
    print(ls)


## Find the Runner-Up Score!
if __name__ == '__main__':
    n = int(input())
    arr = map(int, input().split())
    arr_ls = list(set(arr))
    arr_ls.remove(max(arr_ls))
    arr_ls.sort( reverse=True)
    print(arr_ls[0])

## Finding the percentage
if __name__ == '__main__':
    n = int(input())
    student_marks = {}
    for _ in range(n):
        name, *line = input().split()
        scores = list(map(float, line))
        student_marks[name] = scores
    query_name = input()
    sums = 0
    
    # print(n)
    # print(name)
    # print(scores)
    # print(student_marks)
    # print(student_marks[query_name])
    
    for i in range(len(student_marks[query_name])):
        sums = sums + student_marks[query_name][i]
    re = sums/len(student_marks[query_name])
    print("{:.2f}".format(re))
    
    # print(round(sums/n),3)

## Nested Lists
if __name__ == '__main__':
    namels, scorels = [], []
    for _ in range(int(input())):
        name = input()
        score = float(input())
        namels.append(name)
        scorels.append(score)

    scorels2 = list(set(scorels))
    scorels2.remove(min(scorels2))
    scorels2.sort()
    # print(scorels2[0]) # 2nd max
    
    namels2 = []  
    for i in range(len(scorels)):
        if scorels[i] == scorels2[0]:
            namels2.append(namels[i])
        else:
            pass
    namels2.sort()
    
    for i in range(len(namels2)):
        print(namels2[i])

## Tuples
if __name__ == '__main__':
    n = int(input())
    integer_list = map(int, input().split())
    t=tuple(integer_list)
    print(hash(t))

